{"version":3,"sources":["taxist.jpg","bg.jpg","test.js","index.js"],"names":["theme","createTheme","responsiveFontSizes","classes","gridContainer","padding","bgImage","position","height","width","zIndex","logo","maxHeight","maxWidth","marginTop","breakpoints","only","startDate","color","fontWeight","fontFamily","backgroundColor","container","marginBottom","title1","textTransform","fontSize","title2","lineHeight","title3","countdownContainer","textAlign","timeLeft","down","countdown","snButton","borderWidth","borderColor","borderStyle","question","App","styled","Button","borderRadius","paddingLeft","paddingRight","paddingTop","paddingBottom","whiteSpace","marginRight","marginLeft","up","boxShadow","useState","setAppear1","setAppear2","setAppear3","decCache","decCases","decOfNum","number","titles","Math","min","daysLeft","setDaysLeft","hoursLeft","setHoursLeft","minutesLeft","setMinutesLeft","secondsLeft","setSecondsLeft","wrongAnswers","setWrongAnswers","totalAttempts","setTotalAttempts","result","setResult","useEffect","setTimeout","fetch","then","response","json","data","length","wrong","map","parseInt","isMobile","useMediaQuery","isOpen","setIsOpen","isDisabled","setIsDisabled","q1","setQ1","q2","setQ2","q3","setQ3","q4","setQ4","q5","setQ5","ThemeProvider","src","bg","alt","style","top","right","Stack","Typography","Grid","direction","component","sx","alignItems","item","variant","FormControl","FormLabel","RadioGroup","defaultValue","name","value","onChange","event","target","FormControlLabel","control","Radio","label","onClick","axios","post","console","log","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","date","Date","renderer","days","hours","minutes","seconds","completed","display","left","titlePosition","hideYear","hideMonth","monthTitle","dayTitle","hourTitle","minuteTitle","secondTitle","size","endAtZero","endAt","toUTCString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c2d28f6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/taxist.e3cb8d76.jpg\";","export default __webpack_public_path__ + \"static/media/bg.247e3aff.jpg\";","import {\n    Button,\n    createTheme,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    FormControl,\n    FormControlLabel,\n    FormLabel,\n    Grid,\n    Grow,\n    IconButton,\n    Radio,\n    RadioGroup,\n    responsiveFontSizes,\n    Slide,\n    Stack,\n    TextField,\n    ThemeProvider,\n    Typography,\n    useMediaQuery\n} from \"@mui/material\";\nimport styled from \"@emotion/styled\";\n\nimport ParticlesBg from \"particles-bg\";\nimport Countdown from \"react-countdown\";\n\nimport logo from './taxist.jpg'\nimport bg from '../src/bg.jpg'\n\nimport FlipCountdown from '@rumess/react-flip-countdown';\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nlet theme = createTheme({})\ntheme = responsiveFontSizes(theme);\n\nconst classes = {\n    gridContainer: {\n        padding: 2,\n    },\n    bgImage: {\n        position: 'absolute',\n        height: '200vh',\n        width: '99vw',\n        zIndex: -1\n    },\n    logo: {\n        maxHeight: '40vh',\n        maxWidth: '60vw',\n        marginTop: 12,\n        [theme.breakpoints.only('xs')]: {\n            marginTop: 4,\n            height: '16vh',\n        },\n    },\n    startDate: {\n        // fontSize: '2.5rem',\n        marginTop: 1,\n        color: 'black',\n        fontWeight: 200,\n        fontFamily: \"'Times New Roman', sans-serif\",\n        backgroundColor: 'white'\n    },\n    container: {\n        marginTop: 4,\n        marginBottom: 2,\n        [theme.breakpoints.only('sm')]: {\n            marginTop: 3,\n        },\n        [theme.breakpoints.only('xs')]: {\n            marginTop: 2,\n            marginBottom: 1.5\n        },\n    },\n    title1: {\n        // fontSize: '3rem',\n        color: 'black',\n        backgroundColor: 'white',\n        textTransform: 'uppercase',\n        fontWeight: 600,\n        fontFamily: \"'Times New Roman', sans-serif\",\n        [theme.breakpoints.only('xs')]: {\n            fontSize: '1.75rem'\n        },\n    },\n    title2: {\n        // fontSize: '5rem',\n        color: 'black',\n        backgroundColor: 'white',\n        textTransform: 'uppercase',\n        fontWeight: 200,\n        lineHeight: 1,\n        fontFamily: \"'Times New Roman', sans-serif\",\n        [theme.breakpoints.only('xs')]: {\n            fontSize: '2rem'\n        },\n    },\n    title3: {\n        // fontSize: '6rem',\n        color: 'black',\n        backgroundColor: 'white',\n        textTransform: 'uppercase',\n        fontWeight: 700,\n        lineHeight: 1,\n        fontFamily: \"'Times New Roman', sans-serif\",\n        [theme.breakpoints.only('xs')]: {\n            fontSize: '2.125rem'\n        },\n    },\n    countdownContainer: {\n        textAlign: 'center',\n    },\n    timeLeft: {\n        fontSize: '2rem',\n        color: 'black',\n        backgroundColor: 'white',\n        fontWeight: 300,\n        fontFamily: \"'Times New Roman', sans-serif\",\n        [theme.breakpoints.down('md')]: {\n            marginTop: 2,\n            fontSize: '1.5rem'\n        },\n    },\n    countdown: {\n        fontSize: '2.5rem',\n        color: 'black',\n        textTransform: 'uppercase',\n        fontWeight: 300,\n        lineHeight: 1,\n        fontFamily: \"'Times New Roman', sans-serif\"\n    },\n    snButton: {\n        backgroundColor: 'white',\n        borderWidth: 2,\n        borderColor: '#fff',\n        borderStyle: 'solid',\n        color: '#fff',\n    },\n    question: {\n        backgroundColor: 'white',\n        marginTop: 22\n    }\n}\n\nconst StreamButton = styled(Button)(({theme}) => ({\n    borderRadius: 3,\n    borderColor: '#fff',\n    borderWidth: 3,\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 4,\n    paddingBottom: 4,\n    whiteSpace: 'nowrap',\n    textTransform: 'none',\n    fontFamily: \"'Times New Roman', sans-serif\",\n    fontWeight: 600,\n    color: '#000',\n    [theme.breakpoints.only('xs')]: {\n        fontSize: '1.125rem',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n        marginBottom: 6,\n        marginTop: 6\n    },\n    [theme.breakpoints.only('sm')]: {\n        fontSize: '1.375rem',\n        marginRight: 'auto',\n        marginLeft: 'auto',\n        marginBottom: 12,\n        marginTop: 12\n    },\n    [theme.breakpoints.only('md')]: {\n        fontSize: '1.75rem',\n        marginRight: 32,\n        marginLeft: 32,\n        marginBottom: 0,\n        marginTop: 0\n    },\n    [theme.breakpoints.up('md')]: {\n        fontSize: '2.125rem',\n        marginRight: 48,\n        marginLeft: 48,\n        marginBottom: 0,\n        marginTop: 0\n    },\n    boxShadow: \"0px 0px 6px 0px rgba(255, 255, 255, 0.6)\",\n    '&:hover': {\n        borderColor: '#fff',\n        backgroundColor: 'rgba(161,201,199,0.73)',\n        borderWidth: 4,\n        boxShadow: \"0px 0px 10px 0px rgba(255, 255, 255, 0.6)\",\n    },\n}));\n\nconst App = () => {\n\n    const [appear1, setAppear1] = useState(false);\n    const [appear2, setAppear2] = useState(false);\n    const [appear3, setAppear3] = useState(false);\n\n    let decCache = [],\n        decCases = [2, 0, 1, 1, 1, 2];\n\n    function decOfNum(number, titles) {\n        if (!decCache[number]) decCache[number] = number % 100 > 4 && number % 100 < 20 ? 2 : decCases[Math.min(number % 10, 5)];\n        return titles[decCache[number]];\n    }\n\n    const [daysLeft, setDaysLeft] = useState(0);\n    const [hoursLeft, setHoursLeft] = useState(0);\n    const [minutesLeft, setMinutesLeft] = useState(0);\n    const [secondsLeft, setSecondsLeft] = useState(0);\n\n    const [wrongAnswers, setWrongAnswers] = useState(0);\n    const [totalAttempts, setTotalAttempts] = useState(0);\n    const [result, setResult] = useState(0);\n\n    useEffect(() => {\n        setTimeout(() => {\n            setAppear1(true);\n        }, 100);\n        setTimeout(() => {\n            setAppear2(true);\n        }, 1000);\n        setTimeout(() => {\n            setAppear3(true);\n        }, 2000);\n        fetch('https://sheet.best/api/sheets/1d4436ff-ca6c-4fa1-9508-59c0af432552')\n            .then((response) => response.json())\n            .then((data) => {\n                setTotalAttempts(data.length);\n                let wrong = 0;\n                data.map(data => wrong += parseInt(data.wrong));\n                setWrongAnswers(wrong);\n            })\n    }, [])\n\n\n    const countdownLabel = ({days, hours, minutes, seconds, completed}) => {\n        setDaysLeft(days)\n        setHoursLeft(hours)\n        setMinutesLeft(minutes)\n        setSecondsLeft(seconds)\n        return null\n    };\n\n    const isMobile = useMediaQuery(theme.breakpoints.down('md'));\n\n    const [answer, setAnswer] = useState('');\n    const [isOpen, setIsOpen] = useState(false)\n    const [isError, setIsError] = useState(false);\n    const [isDisabled, setIsDisabled] = useState(false);\n\n    const [q1, setQ1] = useState('q1a1')\n    const [q2, setQ2] = useState('q2a1')\n    const [q3, setQ3] = useState('q3a1')\n    const [q4, setQ4] = useState('q4a1')\n    const [q5, setQ5] = useState('q5a1')\n\n    useEffect(() => {\n        setTimeout(() => {\n            setIsDisabled(false)\n        }, 2000)\n    }, [isDisabled])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <img src={bg} alt='bg' style={classes.bgImage}/>\n            <div\n                style={{\n                    backgroundColor: 'white',\n                    position: 'absolute',\n                    top: 10,\n                    right: 10\n                }}\n            >\n                <Stack>\n                    <Typography>\n                        {`Всего попыток: ${totalAttempts}`}\n                    </Typography>\n                    <Typography>\n                        {`Неправильных ответов: ${wrongAnswers}`}\n                    </Typography>\n                    <Typography>\n                        {`Итого штрафов: ${wrongAnswers * 5} минут массажа И/ИЛИ ${wrongAnswers * 3} поцелуев или хуй знает`}\n                    </Typography>\n                </Stack>\n            </div>\n            <Grid\n                container\n                direction='column'\n                component=\"main\"\n                sx={classes.gridContainer}\n                alignItems='center'\n            >\n                <Grid item>\n                    <img src={logo} alt='logo' style={classes.logo}/>\n                </Grid>\n\n                <Grid item>\n                    <Typography variant='h4' sx={classes.startDate}>\n                        2 января 2022, 11:35\n                    </Typography>\n                </Grid>\n                <Grid item>\n                    <Typography variant='h4' sx={classes.startDate}>\n                        Главное условие - не гуглить\n                    </Typography>\n                </Grid>\n\n                <Grid item style={classes.question}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Вопрос 1</FormLabel>\n                        <RadioGroup\n                            aria-label=\"q1\"\n                            defaultValue=\"q1a1\"\n                            name=\"q1\"\n                            value={q1}\n                            onChange={(event) => setQ1(event.target.value)}\n                        >\n                            <FormControlLabel value=\"q1a1\" control={<Radio/>}\n                                              label=\"Нос - не спицы, волосы - не ресницы.\"/>\n                            <FormControlLabel value=\"q1a2\" control={<Radio/>}\n                                              label=\"Волосы - не спицы, глаза - не ресницы.\"/>\n                            <FormControlLabel value=\"q1a3\" control={<Radio/>}\n                                              label=\"Глаза - не спицы, нос - не ресницы.\"/>\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item style={classes.question}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Вопрос 2</FormLabel>\n                        <RadioGroup\n                            aria-label=\"a2\"\n                            value={q2}\n                            onChange={(event) => setQ2(event.target.value)}\n                        >\n                            <FormControlLabel value=\"q2a1\" control={<Radio/>}\n                                              label=\"Палец не палец, муха не дочь, почешешь - не заплачет.\"/>\n                            <FormControlLabel value=\"q2a2\" control={<Radio/>}\n                                              label=\"Палец не палец, пчела не отец, посмотришь - не засмеется.\"/>\n                            <FormControlLabel value=\"q2a3\" control={<Radio/>}\n                                              label=\"Палец не палец, стрекоза не мать, почешешь - не засмеется.\"/>\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item style={classes.question}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Вопрос 3</FormLabel>\n                        <RadioGroup\n                            aria-label=\"a3\"\n                            value={q3}\n                            onChange={(event) => setQ3(event.target.value)}\n                        >\n                            <FormControlLabel value=\"q3a1\" control={<Radio/>}\n                                              label=\"Синица не ворон, жимолость не бетон.\"/>\n                            <FormControlLabel value=\"q3a2\" control={<Radio/>}\n                                              label=\"Синица не ворон, жимолость не гипсокартон.\"/>\n                            <FormControlLabel value=\"q3a3\" control={<Radio/>}\n                                              label=\"Синица не ворон, жимолость не синтепон.\"/>\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item style={classes.question}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Вопрос 4</FormLabel>\n                        <RadioGroup\n                            aria-label=\"a4\"\n                            value={q4}\n                            onChange={(event) => setQ4(event.target.value)}\n                        >\n                            <FormControlLabel value=\"q4a1\" control={<Radio/>}\n                                              label=\"Волосы - не спицы, глаза - не ресницы.\"/>\n                            <FormControlLabel value=\"q4a2\" control={<Radio/>}\n                                              label=\"Волосы - не спицы, глаза - не ресницы.\"/>\n                            <FormControlLabel value=\"q4a3\" control={<Radio/>}\n                                              label=\"Волосы - не спицы, глаза - не ресницы.\"/>\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item style={classes.question}>\n                    <FormControl component=\"fieldset\">\n                        <FormLabel component=\"legend\">Вопрос 5</FormLabel>\n                        <RadioGroup\n                            aria-label=\"a5\"\n                            value={q5}\n                            onChange={(event) => setQ5(event.target.value)}\n                        >\n                            <FormControlLabel value=\"q5a1\" control={<Radio/>}\n                                              label=\"Ястреб не тетерев, пшено не рассыплет.\"/>\n                            <FormControlLabel value=\"q5a2\" control={<Radio/>}\n                                              label=\"Тетерев не ястреб, кукурузу не рассыплет.\"/>\n                            <FormControlLabel value=\"q5a3\" control={<Radio/>}\n                                              label=\"Тетерев не ястреб, овес не рассыплет.\"/>\n                            <FormControlLabel value=\"q5a4\" control={<Radio/>}\n                                              label=\"Ястреб не тетерев, ячмень не рассыплет.\"/>\n                        </RadioGroup>\n                    </FormControl>\n                </Grid>\n\n                <Grid item style={classes.question}>\n                    <Button onClick={() => {\n                        const right = {\n                            q1: 'q1a2',\n                            q2: 'q2a3',\n                            q3: 'q3a3',\n                            q4: 'q4a1',\n                            q5: 'q5a2'\n                        }\n                        let wrong = 0;\n                        if (q1 !== right.q1) wrong++;\n                        if (q2 !== right.q2) wrong++;\n                        if (q3 !== right.q3) wrong++;\n                        if (q4 !== right.q4) wrong++;\n                        if (q5 !== right.q5) wrong++;\n\n                        setResult(wrong);\n                        setTotalAttempts(totalAttempts + 1)\n                        setWrongAnswers(wrongAnswers + wrong)\n\n                        axios.post('https://sheet.best/api/sheets/1d4436ff-ca6c-4fa1-9508-59c0af432552', {wrong: wrong})\n                            .then(response => {\n                                console.log(response)\n                            })\n                        setIsOpen(true)\n                    }}>\n                        ПРОВЕРИТЬ ОТВЕТЫ\n                    </Button>\n                </Grid>\n            </Grid>\n            <Dialog\n                open={isOpen}\n                onClose={() => setIsOpen(false)}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {\"РЕЗУЛЬТАТЫ\"}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {\n                            `ТВОЙ РЕЗУЛЬТАТ: ${5 - result} / 5`\n                        }\n                    </DialogContentText>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {\n                            (result !== 0) ? 'ПОПРОБУЙ ЕЩЕ' : 'ПОЗДРАВЛЯЮ'\n                        }\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setIsOpen(false)} autoFocus>\n                        ок\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <Countdown\n                date={new Date(2022, 0, 2, 11, 35, 0)}\n                renderer={countdownLabel}\n                style={{display: 'none'}}\n            />\n\n            <div\n                style={{\n                    textAlign: 'center',\n                    backgroundColor: 'white',\n                    position: 'absolute',\n                    top: 10,\n                    left: 10\n                }}\n            >\n                <Typography variant='h4' sx={classes.timeLeft}>\n                    Я прилечу через\n                </Typography>\n                <FlipCountdown\n                    theme='light'\n                    titlePosition='bottom'\n                    hideYear\n                    hideMonth\n                    monthTitle='месяц'\n                    dayTitle={decOfNum(daysLeft, ['день', 'дня', 'дней'])}\n                    hourTitle={decOfNum(hoursLeft, ['час', 'часа', 'часов'])}\n                    minuteTitle={decOfNum(minutesLeft, ['минута', 'минуты', 'минут'])}\n                    secondTitle={decOfNum(secondsLeft, ['секунда', 'секунды', 'секунд'])}\n                    size={isMobile ? 'small' : 'medium'}\n                    endAtZero\n                    endAt={new Date(2022, 0, 2, 11, 35, 0).toUTCString()}\n                    style={{fontFamily: \"'IBM Plex Sans', sans-serif\", color: '#000'}}\n                />\n            </div>\n            );\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './test';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}